
<h2><a id="user-content-usage" class="anchor" href="https://github.com/adamluzsi/rack-app.rb#usage"
       aria-hidden="true"><span class="octicon octicon-link"></span></a>Usage</h2>

<p>config.ru</p>

<div class="highlight highlight-source-ruby"><pre><span class="pl-k">require</span> <span class="pl-s"><span
        class="pl-pds">'</span>rack/app<span class="pl-pds">'</span></span>

<span class="pl-k">require_relative</span> <span class="pl-s"><span class="pl-pds">'</span>lib/bootstrap<span
            class="pl-pds">'</span></span>

<span class="pl-k">class</span> <span class="pl-en">YourAwesomeApp<span class="pl-e"> &lt; Rack::App</span></span>

  mount <span class="pl-c1">AwesomeController</span>

  get <span class="pl-s"><span class="pl-pds">'</span>/hello<span class="pl-pds">'</span></span> <span
            class="pl-k">do</span>
    <span class="pl-s"><span class="pl-pds">'</span>Hello World!<span class="pl-pds">'</span></span>
  <span class="pl-k">end</span>

  get <span class="pl-s"><span class="pl-pds">'</span>/nope<span class="pl-pds">'</span></span> <span
            class="pl-k">do</span>
    request.env
    response.write <span class="pl-s"><span class="pl-pds">'</span>some response body<span
            class="pl-pds">'</span></span>
  <span class="pl-k">end</span>

  post <span class="pl-s"><span class="pl-pds">'</span>/lol_post_fail<span class="pl-pds">'</span></span> <span
            class="pl-k">do </span>
    status <span class="pl-c1">500</span>
    <span class="pl-s"><span class="pl-pds">'</span>LOL<span class="pl-pds">'</span></span>
  <span class="pl-k">end</span>

  get <span class="pl-s"><span class="pl-pds">'</span>/users/:user_id<span class="pl-pds">'</span></span> <span
            class="pl-k">do </span>
    params[<span class="pl-s"><span class="pl-pds">'</span>user_id<span class="pl-pds">'</span></span>]
  <span class="pl-k">end</span>

  post <span class="pl-s"><span class="pl-pds">'</span>/some/endpoint/for/the/rabbit/:queue_name<span
            class="pl-pds">'</span></span> <span class="pl-k">do </span>
    mq_request <span class="pl-c"># helper are the class instance method </span>
  <span class="pl-k">end</span>

  <span class="pl-k">def</span> <span class="pl-en">mq_request</span>
    q <span class="pl-k">=</span> <span class="pl-c1">BUNNY_CONN_CHANNEL</span>.queue(params[<span class="pl-s"><span
            class="pl-pds">'</span>queue_name<span class="pl-pds">'</span></span>])
    <span class="pl-c1">BUNNY_CONN_CHANNEL</span>.default_exchange.publish(request.body.read, <span class="pl-c1">:routing_key</span> =&gt; q.name)
  <span class="pl-k">end</span>

<span class="pl-k">end</span>

run <span class="pl-c1">YourAwesomeApp</span></pre>
</div>

<p>you can access Rack::Request with the request method and Rack::Response as response method. </p>

<p>By default if you dont write anything to the response 'body' the endpoint block logic return will be used</p>

<h2><a id="user-content-example-apps-to-start-with" class="anchor"
       href="https://github.com/adamluzsi/rack-app.rb#example-apps-to-start-with" aria-hidden="true"><span
        class="octicon octicon-link"></span></a>Example Apps To start with</h2>

<ul>
    <li><p><a href="https://github.com/adamluzsi/rack-app.rb-examples/tree/master/basic">Basic</a></p>

        <ul>
            <li>bare bone simple example app</li>
        </ul>
    </li>
    <li><p><a href="https://github.com/adamluzsi/rack-app.rb-examples/tree/master/escher_authorized">Escher
        Authorized Api</a></p>

        <ul>
            <li>complex authorization for corporal level api use</li>
        </ul>
    </li>
</ul>

<h2><a id="user-content-benchmarking" class="anchor"
       href="https://github.com/adamluzsi/rack-app.rb#benchmarking" aria-hidden="true"><span
        class="octicon octicon-link"></span></a><a href="https://github.com/adamluzsi/rack-app.rb-benchmark">Benchmarking</a>
</h2>

<ul>
    <li>Dump duration with zero if or routing: 6.0e-06 s

        <ul>
            <li>no routing</li>
            <li>return only a static array with static values</li>
        </ul>
    </li>
    <li>Rack::App duration with routing lookup: 7.0e-05 s

        <ul>
            <li>with routing</li>
            <li>with value parsing and reponse object building</li>
        </ul>
    </li>
    <li>Grape::API duration with routing lookup: 0.180764 s

        <ul>
            <li>with routing</li>
            <li>with value parsing and reponse object building</li>
        </ul>
    </li>

</ul>

